# sudo: false --> run dist image in docker container on shared host for faster startup (runs slower)
# sudo: required --> run dist image in VM on Google Compute Engine for slower startup (runs faster)
# sudo and dist are ignored on osx
sudo: required
dist: trusty
os: linux
language: generic
jdk: oraclejdk8

env:
  global:
    #- GRADLE_OPTS='-Dorg.gradle.daemon=false -Dorg.gradle.parallel=false -Dkotlin.incremental=false -DdisablePreDex'
    - ADB_INSTALL_TIMEOUT=10 # minutes
  matrix:
    #- SYS=28 ABI="google_apis;x86"
    #- SYS=22 ABI="default;x86"
    - SYS=23 API="default" ABI="x86"

branches:
  only:
    - master

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.m2
    - $HOME/.android/build-cache

before_install:
  # Install Android SDK tools
  - ANDROID_SDK_TOOLS=4333796 # android-28
  - export ANDROID_HOME=~/android-sdk
  - wget -q "https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_SDK_TOOLS.zip" -O android-sdk-tools.zip
  - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
  - rm android-sdk-tools.zip
  - PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools

  # Silence warning
  - mkdir -p ~/.android
  - touch ~/.android/repositories.cfg

  # Accept licenses before installing components, no need to echo y for each component
  - yes | sdkmanager --licenses

  # Update/Install android tools
  - sdkmanager --channel=0 "tools" "build-tools;28.0.3" "platform-tools" "platforms;android-28" "emulator" "system-images;android-$SYS;$API;$ABI" > /dev/null
  - sdkmanager --list | head -15
  - echo no | avdmanager create avd -f -n test -k "system-images;android-$SYS;$API;$ABI"
  - cat ~/.android/avd/test.avd/config.ini
  - cp -f ./scripts/config.ini ~/.android/avd/test.avd/
  - echo "image.sysdir.1=system-images/android-$SYS/$API/$ABI/" >> ~/.android/avd/test.avd/config.ini

script:
  #list hardware spec
  - sudo lshw -C display
  - sudo lshw -C processor
  #- sudo lscpu

  #check VM hardware acceleration support
  #- $ANDROID_HOME/emulator/emulator -accel-check

  #start emulator
  - EMU_GPU="swiftshader_indirect" #guest,off
  #- EMU_OPTIONS="-no-window -no-accel -gpu $EMU_GPU -no-audio -no-snapshot -wipe-data"
  - EMU_OPTIONS="-no-accel -gpu $EMU_GPU -no-audio -no-snapshot -wipe-data"
  - $ANDROID_HOME/emulator/emulator-headless -avd test $EMU_OPTIONS &

  #wait for emulator
  - chmod +x ./scripts/android-wait-for-emulator.sh
  - ./scripts/android-wait-for-emulator.sh

  #close anr dialog
  #- chmod +x ./scripts/close-anr.sh
  #- ./scripts/close-anr.sh

  #start ui tests
  - chmod +x gradlew
  - adb logcat -s TestRunner:V & LOGCAT_PID=$!
  - TERM=dumb ./gradlew connectedAndroidTest --stacktrace
  - if [ -n "$LOGCAT_PID" ] ; then kill $LOGCAT_PID; fi

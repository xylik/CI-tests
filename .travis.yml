dist: trusty
os: linux
language: generic
jdk: oraclejdk8

env:
  global:
    - ADB_INSTALL_TIMEOUT=8 # minutes
  matrix:
    - SYS=24 ABI="google_apis;x86_64"

branches:
  only:
    - master
    - /feature\/.*/

before_install:
  # start X virtual framebuffer
#  - export DISPLAY=:99.0
#  - sh -e /etc/init.d/xvfb start
#  - sleep 3 # give xvfb some time to start
  # Install Android SDK tools
  - ANDROID_SDK_TOOLS=4333796 # android-28
  - export ANDROID_HOME=~/android-sdk
  - wget -q "https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_SDK_TOOLS.zip" -O android-sdk-tools.zip
  - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
  - rm android-sdk-tools.zip
  - PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
  # Silence warning
  - mkdir -p ~/.android
  - touch ~/.android/repositories.cfg
  # Accept licenses before installing components, no need to echo y for each component
  - yes | sdkmanager --licenses
  # Update/Install android tools
  - sdkmanager --channel=0 "tools" "build-tools;28.0.3" "platform-tools" "platforms;android-28" "emulator" "system-images;android-$SYS;$ABI" > /dev/null
  - sdkmanager --list | head -15
  - echo no | avdmanager create avd -f -n test -k "system-images;android-$SYS;$ABI"
  - cat ~/.android/avd/test.avd/config.ini | head -30
#  - echo 'hw.gpu.enabled=no' >> ~/.android/avd/test.avd/config.ini
  - EMU_OPTIONS="-no-accel -no-audio -no-boot-anim" #-gpu off -no-boot-anim
  - $ANDROID_HOME/emulator/emulator-headless -avd test $EMU_OPTIONS &
#  - chmod +x ./scripts/wait-for-emulator.sh
#  - ./scripts/android-wait-for-emulator.sh
  - chmod +x ./scripts/wait-for-emulator.sh
  - ./scripts/wait-for-emulator.sh


before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.m2
    - $HOME/.android/build-cache

#before_script:
    #- $ANDROID_HOME/tools/bin/sdkmanager --channel=0 "tools" "platform-tools" "build-tools;28.0.1" "platforms;android-28" "platforms;android-21" "system-images;android-24;default;armeabi-v7a"
    #- $ANDROID_HOME/tools/bin/sdkmanager --channel=0 "tools" "platform-tools" "build-tools;28.0.1" "platforms;android-28" "platforms;android-21" "system-images;android-24;google_apis;x86"
    #- $ANDROID_HOME/tools/bin/sdkmanager --channel=0 "tools" "platform-tools" "build-tools;28.0.1" "platforms;android-28" "platforms;android-21" "system-images;android-24;google_apis;x86_64"
#  -     - $ANDROID_HOME/tools/bin/sdkmanager --channel=0 "tools" "platform-tools" "build-tools;28.0.1" "platforms;android-28" "platforms;android-21" "system-images;android-24;google_apis;x86_64"
    #- echo no | $ANDROID_HOME/tools/bin/avdmanager create avd -f -n test -k "system-images;android-24;default;armeabi-v7a"
#    - echo no | $ANDROID_HOME/tools/bin/avdmanager create avd -f -n test -k "system-images;android-24;google_apis;x86_64"
    #- echo 'disk.dataPartition.size=512M' >> ~/.android/avd/test.avd/config.ini
#    - $ANDROID_HOME/emulator/emulator -avd test -no-accel -gpu swiftshader -camera-back none -camera-front none -no-boot-anim -no-snapshot-save -no-snapstorage -no-audio -no-window &
#    - rm gradle.properties
#    - mv ci.properties gradle.properties

script:
    - chmod +x gradlew
#    - android-wait-for-emulator
#    - ./gradlew jacocoTestReport

    #- adb shell input keyevent 82 &
    - adb logcat -s TestRunner:V & LOGCAT_PID=$!
    - ./gradlew connectedAndroidTest --stacktrace
#    - ./gradlew sdk-android:connectedAndroidTest -P android.testInstrumentationRunnerArguments.class=de.gesundheitscloud.sdk.integration.CrossSDKTest -P ignoreIntegrationTests=false --stacktrace
    - if [ -n "$LOGCAT_PID" ] ; then kill $LOGCAT_PID; fi

#after_success:
#    - bash <(curl -s https://codecov.io/bash) $CODECOV_TOKEN


#  $ANDROID_HOME/tools/bin/avdmanager create avd -f -n test1 -k "system-images;android-24;default;armeabi-v7a" -d "Galaxy Nexus"
